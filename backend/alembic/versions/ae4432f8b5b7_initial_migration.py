"""Initial migration

Revision ID: ae4432f8b5b7
Revises:
Create Date: 2024-03-11 16:00:23.837847

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ae4432f8b5b7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TABLE IF EXISTS subject CASCADE")
    op.execute("DROP TABLE IF EXISTS student_subject CASCADE")
    op.drop_table('teacher_subject')
    op.drop_table('website_user')
    # Note: 'website_user' was listed twice in the original script; make sure this is not an error.
    # ### end Alembic commands ###

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('website_user',
                    sa.Column('uid', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('is_admin', sa.BOOLEAN(), server_default=sa.text(
                        'false'), autoincrement=False, nullable=False),
                    sa.Column('given_name', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('mail', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('uid', name='website_user_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('vak',
                    sa.Column('vak_id', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('naam', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('vak_id', name='vak_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('subject',
                    sa.Column('id', sa.BIGINT(), server_default=sa.text(
                        "nextval('subject_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='subject_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('file',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('submission_id', sa.BIGINT(),
                              autoincrement=False, nullable=True),
                    sa.Column('project_id', sa.BIGINT(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'],
                                            name='file_project_id_fkey', ondelete='SET NULL'),
                    sa.ForeignKeyConstraint(['submission_id'], ['submission.id'],
                                            name='file_submission_id_fkey', ondelete='SET NULL'),
                    sa.PrimaryKeyConstraint('id', name='file_pkey')
                    )
    op.create_table('studentgroep',
                    sa.Column('azureobjectid', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('groep_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['azureobjectid'], [
                        'websiteuser.azureobjectid'], name='studentgroep_azureobjectid_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['groep_id'], ['groep.groep_id'],
                                            name='studentgroep_groep_id_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint(
                        'azureobjectid', 'groep_id', name='studentgroep_pkey')
                    )
    op.create_table('status',
                    sa.Column('id', sa.BIGINT(), server_default=sa.text(
                        "nextval('status_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('status_name', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='status_pkey'),
                    sa.UniqueConstraint('status_name', name='status_status_name_key'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('submission',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
                    sa.Column('team_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.Column('project_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.Column('status_id', sa.BIGINT(), server_default=sa.text(
                        '1'), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'],
                                            name='submission_project_id_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['status_id'], ['status.id'],
                                            name='submission_status_id_fkey', ondelete='RESTRICT'),
                    sa.ForeignKeyConstraint(['team_id'], ['team.id'],
                                            name='submission_team_id_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name='submission_pkey')
                    )
    op.create_table('project',
                    sa.Column('id', sa.BIGINT(), server_default=sa.text(
                        "nextval('project_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('deadline', sa.DATE(),
                              autoincrement=False, nullable=False),
                    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('subject_id', sa.BIGINT(), server_default=sa.text(
                        "nextval('project_subject_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('description', sa.TEXT(),
                              autoincrement=False, nullable=True),
                    sa.Column('max_team_size', sa.INTEGER(), server_default=sa.text(
                        '4'), autoincrement=False, nullable=False),
                    sa.CheckConstraint('deadline >= CURRENT_DATE',
                                       name='deadline_check'),
                    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'],
                                            name='project_subject_id_fkey', ondelete='SET NULL'),
                    sa.PrimaryKeyConstraint('id', name='project_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('bestand',
                    sa.Column('bestand_id', sa.BIGINT(),
                              autoincrement=True, nullable=False),
                    sa.Column('indiening_id', sa.BIGINT(),
                              autoincrement=False, nullable=True),
                    sa.Column('project_id', sa.BIGINT(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['indiening_id'], [
                        'indiening.indiening_id'], name='bestand_indiening_id_fkey', ondelete='SET NULL'),
                    sa.PrimaryKeyConstraint('bestand_id', name='bestand_pkey')
                    )
    op.create_table('websiteuser',
                    sa.Column('azureobjectid', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('is_admin', sa.BOOLEAN(), server_default=sa.text(
                        'false'), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('azureobjectid', name='websiteuser_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('student_group',
                    sa.Column('uid', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('team_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['team_id'], ['team.id'],
                                            name='student_group_team_id_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['uid'], ['website_user.uid'],
                                            name='student_group_uid_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('uid', 'team_id', name='student_group_pkey')
                    )
    op.create_table('teacher_subject',
                    sa.Column('uid', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('subject_id', sa.BIGINT(),
                              autoincrement=True, nullable=False),
                    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'],
                                            name='teacher_subject_subject_id_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['uid'], ['website_user.uid'],
                                            name='teacher_subject_uid_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('uid', 'subject_id',
                                            name='teacher_subject_pkey')
                    )
    op.create_table('lesgevervak',
                    sa.Column('azureobjectid', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('vak_id', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['azureobjectid'], [
                        'websiteuser.azureobjectid'], name='lesgevervak_azureobjectid_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['vak_id'], ['vak.vak_id'],
                                            name='lesgevervak_vak_id_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint(
                        'azureobjectid', 'vak_id', name='lesgevervak_pkey')
                    )
    op.create_table('indiening',
                    sa.Column('indiening_id', sa.BIGINT(),
                              autoincrement=True, nullable=False),
                    sa.Column('datum', postgresql.TIMESTAMP(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
                    sa.Column('groep_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.Column('project_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.Column('status_id', sa.BIGINT(), server_default=sa.text(
                        '1'), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['groep_id'], ['groep.groep_id'],
                                            name='indiening_groep_id_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('indiening_id', name='indiening_pkey')
                    )
    op.create_table('groep',
                    sa.Column('groep_id', sa.BIGINT(),
                              autoincrement=True, nullable=False),
                    sa.Column('groep', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('score', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('project_id', sa.BIGINT(),
                              autoincrement=False, nullable=True),
                    sa.CheckConstraint('score >= 0 AND score <= 20',
                                       name='score_check'),
                    sa.PrimaryKeyConstraint('groep_id', name='groep_pkey')
                    )
    op.create_table('team',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('team_name', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('score', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.Column('project_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.CheckConstraint('score >= 0 AND score <= 20',
                                       name='score_check'),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'],
                                            name='team_project_id_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name='team_pkey')
                    )
    op.create_table('studentvak',
                    sa.Column('azureobjectid', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('vak_id', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['azureobjectid'], [
                        'websiteuser.azureobjectid'], name='studentvak_azureobjectid_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['vak_id'], ['vak.vak_id'],
                                            name='studentvak_vak_id_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint(
                        'azureobjectid', 'vak_id', name='studentvak_pkey')
                    )
    op.create_table('student_subject',
                    sa.Column('uid', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('subject_id', sa.BIGINT(),
                              autoincrement=True, nullable=False),
                    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'],
                                            name='student_subject_subject_id_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['uid'], ['website_user.uid'],
                                            name='student_subject_uid_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('uid', 'subject_id',
                                            name='student_subject_pkey')
                    )
    # ### end Alembic commands ###
