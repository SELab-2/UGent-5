"""Allign with new schema

Revision ID: 2cc559f8470c
Revises: ae4432f8b5b7
Create Date: 2024-03-11 16:20:20.260148

"""
from typing import Sequence, Union

from alembic import op #type : ignore
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2cc559f8470c'
down_revision: Union[str, None] = 'ae4432f8b5b7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop tables that are dependent on other tables
    op.execute('DROP TABLE IF EXISTS student_subject CASCADE')
    op.execute('DROP TABLE IF EXISTS teacher_subject CASCADE')
    op.execute('DROP TABLE IF EXISTS student_group CASCADE')
    op.execute('DROP TABLE IF EXISTS submission CASCADE')
    op.execute('DROP TABLE IF EXISTS file CASCADE')
    op.execute('DROP TABLE IF EXISTS website_user CASCADE')
    op.execute('DROP TABLE IF EXISTS status CASCADE')
    op.execute('DROP TABLE IF EXISTS team CASCADE')
    op.execute('DROP TABLE IF EXISTS subject CASCADE')
    op.execute('DROP TABLE IF EXISTS project CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('submission_id', sa.BIGINT(),
                              autoincrement=False, nullable=True),
                    sa.Column('project_id', sa.BIGINT(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'],
                                            name='file_project_id_fkey', ondelete='SET NULL'),
                    sa.ForeignKeyConstraint(['submission_id'], ['submission.id'],
                                            name='file_submission_id_fkey', ondelete='SET NULL'),
                    sa.PrimaryKeyConstraint('id', name='file_pkey')
                    )
    op.create_table('project',
                    sa.Column('id', sa.BIGINT(), server_default=sa.text(
                        "nextval('project_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('deadline', sa.DATE(),
                              autoincrement=False, nullable=False),
                    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('subject_id', sa.BIGINT(), server_default=sa.text(
                        "nextval('project_subject_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('description', sa.TEXT(),
                              autoincrement=False, nullable=True),
                    sa.Column('max_team_size', sa.INTEGER(), server_default=sa.text(
                        '4'), autoincrement=False, nullable=False),
                    sa.CheckConstraint('deadline >= CURRENT_DATE',
                                       name='deadline_check'),
                    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'],
                                            name='project_subject_id_fkey', ondelete='SET NULL'),
                    sa.PrimaryKeyConstraint('id', name='project_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('teacher_subject',
                    sa.Column('uid', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('subject_id', sa.BIGINT(),
                              autoincrement=True, nullable=False),
                    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'],
                                            name='teacher_subject_subject_id_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['uid'], ['website_user.uid'],
                                            name='teacher_subject_uid_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('uid', 'subject_id',
                                            name='teacher_subject_pkey')
                    )
    op.create_table('student_subject',
                    sa.Column('uid', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('subject_id', sa.BIGINT(),
                              autoincrement=True, nullable=False),
                    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'],
                                            name='student_subject_subject_id_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['uid'], ['website_user.uid'],
                                            name='student_subject_uid_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('uid', 'subject_id',
                                            name='student_subject_pkey')
                    )
    op.create_table('submission',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
                    sa.Column('team_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.Column('project_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.Column('status_id', sa.BIGINT(), server_default=sa.text(
                        '1'), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'],
                                            name='submission_project_id_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['status_id'], ['status.id'],
                                            name='submission_status_id_fkey', ondelete='RESTRICT'),
                    sa.ForeignKeyConstraint(['team_id'], ['team.id'],
                                            name='submission_team_id_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name='submission_pkey')
                    )
    op.create_table('subject',
                    sa.Column('id', sa.BIGINT(), server_default=sa.text(
                        "nextval('subject_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='subject_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('team',
                    sa.Column('id', sa.BIGINT(), server_default=sa.text(
                        "nextval('team_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('team_name', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('score', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.Column('project_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.CheckConstraint('score >= 0 AND score <= 20',
                                       name='score_check'),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'],
                                            name='team_project_id_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name='team_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('student_group',
                    sa.Column('uid', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('team_id', sa.BIGINT(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['team_id'], ['team.id'],
                                            name='student_group_team_id_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['uid'], ['website_user.uid'],
                                            name='student_group_uid_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('uid', 'team_id', name='student_group_pkey')
                    )
    op.create_table('status',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('status_name', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='status_pkey'),
                    sa.UniqueConstraint('status_name', name='status_status_name_key')
                    )
    op.create_table('website_user',
                    sa.Column('uid', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.Column('is_admin', sa.BOOLEAN(), server_default=sa.text(
                        'false'), autoincrement=False, nullable=False),
                    sa.Column('given_name', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('mail', sa.TEXT(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('uid', name='website_user_pkey')
                    )
    # ### end Alembic commands ###
